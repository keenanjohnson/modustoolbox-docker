# This is a STM32L4R5ZI nucleo board with a single STM32L4R5ZIT6 chip.
# http://www.st.com/en/evaluation-tools/nucleo-l4r5zi.html
#
# Two Winbond W25Q128FV attached, dual-1-line or dual-4-line mode
#

# This is for using the onboard STLINK
source [find interface/stlink.cfg]

transport select hla_swd

# increase working area to 96KB
set WORKAREASIZE 0x18000

source [find target/stm32l4x.cfg]

# W25Q128-A
set a [llength [flash list]]
flash bank $_CHIPNAME.w25q128-a cmspi 0x90000000 0 0 0 $_TARGETNAME \
	0x3FC 0x48000014  2 0x48001014 10 \
	0x48000C14  7 0x3EC 0x3EC 0x00004000 0x48000C14  6 0x3EC 0x3EC 0x00001000 \
	0x48000C14  5 0x3EC 0x3EC 0x00000400 0x48000C14  4 0x3EC 0x3EC 0x00000100

# W25Q128-B
set b [llength [flash list]]
flash bank $_CHIPNAME.w25q128-b cmspi 0x91000000 0 0 0 $_TARGETNAME \
	0x3FC 0x48000014  2 0x48001014 10 \
	0x48001014 15 0x3EC 0x3EC 0x40000000 0x48001014 14 0x3EC 0x3EC 0x10000000 \
	0x48001014 13 0x3EC 0x3EC 0x04000000 0x48001014 12 0x3EC 0x3EC 0x01000000

proc cmqpi_init { } {
	global a b
	mmw 0x4002104C 0x000001FF 0				;# RCC_AHB2ENR |= GPIOA-GPIOI (enable clocks)
	mmw 0x40021058 0x10000000 0				;# RCC_APB1ENR1 |= PWREN (enable clock)
	sleep 1									;# Wait for clock startup

	mmw 0x40007004 0x00000200 0				;# PWR_CR2 |= IOSV (required for use of GPOIG, cf. RM0432)

	# PA02: P1_NCS, PE10: P1_CLK, PD07: P1_IO3, PD06: P1_IO2, PD05: P1_IO1, PD04: P1_IO0
	# PA02:PPUP:M, PD07:INPDO:V, PD06:INPDO:V, PD05:INPDO:V, PD04:INPDO:V, PE10:PPUP:V
	# Port A: PA02:PPUP:M
	mmw 0x48000000 0x00000010 0x00000020	;# MODER
	mmw 0x48000004 0x00000000 0x00000004	;# OTYPER
	mmw 0x48000008 0x00000010 0x00000020	;# OSPEEDR
	mmw 0x4800000C 0x00000010 0x00000020	;# PUPDR
	mmw 0x48000014 0x00000004 0x00000000	;# ODR
	# Port D: PD07:INPDO:V, PD06:INPDO:V, PD05:INPDO:V, PD04:INPDO:V
	mmw 0x48000C00 0x00000000 0x0000FF00	;# MODER
	mmw 0x48000C04 0x00000000 0x000000F0	;# OTYPER
	mmw 0x48000C08 0x0000FF00 0x00000000	;# OSPEEDR
	mmw 0x48000C0C 0x0000AA00 0x00005500	;# PUPDR
	mmw 0x48000C14 0x00000000 0x000000F0	;# ODR
	# Port E: PE10:PPUP:V
	mmw 0x48001000 0x00100000 0x00200000	;# MODER
	mmw 0x48001004 0x00000000 0x00000400	;# OTYPER
	mmw 0x48001008 0x00300000 0x00000000	;# OSPEEDR
	mmw 0x4800100C 0x00100000 0x00200000	;# PUPDR
	mmw 0x48001014 0x00000400 0x00000000	;# ODR

	# PA02: P1_NCS, PE10: P1_CLK, PE15: P1_IO3, PE14: P1_IO2, PE13: P1_IO1, PE12: P1_IO0
	# PA02:PPUP:M, PE15:INPDO:V, PE14:INPDO:V, PE13:INPDO:V, PE12:INPDO:V, PE10:PPUP:V
	# Port A: PA02:PPUP:M
	mmw 0x48000000 0x00000010 0x00000020	;# MODER
	mmw 0x48000004 0x00000000 0x00000004	;# OTYPER
	mmw 0x48000008 0x00000010 0x00000020	;# OSPEEDR
	mmw 0x4800000C 0x00000010 0x00000020	;# PUPDR
	mmw 0x48000014 0x00000004 0x00000000	;# ODR
	# Port E: PE15:INPDO:V, PE14:INPDO:V, PE13:INPDO:V, PE12:INPDO:V, PE10:PPUP:V
	mmw 0x48001000 0x00100000 0xFF200000	;# MODER
	mmw 0x48001004 0x00000000 0x0000F400	;# OTYPER
	mmw 0x48001008 0xFF300000 0x00000000	;# OSPEEDR
	mmw 0x4800100C 0xAA100000 0x55200000	;# PUPDR
	mmw 0x48001014 0x00000400 0x0000F000	;# ODR

	#cmspi set $a w25q128fv 0x1000000 0x100 0x03 0xEB 0x02 0xC7 0x10000 0xD8
	# exit QPI mode, enter QPI mode, show status register 3 and 2
	cmspi cmd $a 0 0xFF; cmspi cmd $a 0 0xB7; cmspi cmd $a 1 0x15
	cmspi cmd $a 0 0x38; cmspi qpi $a 2; cmspi cmd $a 1 0x35

	#cmspi set $b w25q128fv 0x1000000 0x100 0x03 0xEB 0x02 0xC7 0x10000 0xD8
	# exit QPI mode, enter QPI mode, show status register 3 and 2
	cmspi cmd $b 0 0xFF; cmspi cmd $b 0 0xB7; cmspi cmd $b 1 0x15
	cmspi cmd $b 0 0x38; cmspi qpi $b 2; cmspi cmd $b 1 0x35
}

$_TARGETNAME configure -event reset-init {
	mmw 0x40022000 0x00000003 0x0000000C	;# 3 WS for 72 MHz HCLK
	sleep 1
	mmw 0x40021000 0x00000100 0x00000000	;# HSI on
	mww 0x4002100C 0x01002432				;# 72 MHz: PLLREN=1, PLLM=4, PLLN=36, PLLR=2, HSI
	mww 0x40021008 0x00008001				;# always HSI, APB1: /1, APB2: /1
	mmw 0x40021000 0x01000000 0x00000000	;# PLL on
	sleep 1
	mmw 0x40021008 0x00000003 0x00000000	;# switch to PLL
	sleep 1

	adapter speed 4000

	cmqpi_init
}
